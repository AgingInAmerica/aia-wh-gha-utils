name: 'Repo Dispatch'
description: 'Repository Dispatch GitHub Action'
inputs:
  event_type:
    description: 'Event Type'
    required: true
  client_payload:
    description: 'Client Payload'
    default: '{}'
    required: false
  repository:
    description: ''
    required: false
  wait:
    description: 'Whether to wait triggered workflow to finish'
    required: false
    default: 'false'
  # Secrets
  gh_token:
    description: 'GitHub Token'
    required: true
runs:
  using: "composite"
  steps:
    - name: Run Repo Workflow
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token || github.token }}
        REPO: ${{ inputs.repository || github.repository }}
      run: |
        echo "Call Dispatch API"
        BODY=$(jq -n \
          --arg event_type "${{ inputs.event_type }}" \
          --argjson client_payload '${{ inputs.client_payload }}' \
          '$ARGS.named'
        )
        gh api "repos/${{ env.REPO }}/dispatches" --input - <<< $BODY

        if [[ "${{ inputs.wait }}" == "false" ]]; then
          echo "Pipeline finished. Graceful exit."
          exit 0
        fi

        sleep 3 # wait for 3 seconds to propagate changes
        CREATED_AT=$(date --date="4 seconds ago" +%Y-%m-%dT%H:%M:%SZ)
        WFID=$(gh run list -R "${REPO}" \
          --json databaseId,event,status,createdAt \
          -q '.[] | select(.status != "completed" and .event == "repository_dispatch" and .createdAt >= "'"$CREATED_AT"'") | .databaseId'
        )

        gh run watch "$WFID" -R "${REPO}" --exit-status 69
